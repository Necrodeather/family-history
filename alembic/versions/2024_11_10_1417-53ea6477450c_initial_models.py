"""initial models

Revision ID: 53ea6477450c
Revises:
Create Date: 2024-11-10 14:17:16.513150

"""

from typing import Sequence, Union

import sqlalchemy as sa
import sqlalchemy_utils

from alembic import op

# revision identifiers, used by Alembic.
revision: str = '53ea6477450c'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'expenses_categories',
        sa.Column('name', sa.String(length=128), nullable=False),
        sa.Column(
            'id',
            sqlalchemy_utils.types.uuid.UUIDType(binary=False),
            nullable=False,
        ),
        sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
        sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_expenses_categories')),
        sa.UniqueConstraint('name', name=op.f('uq_expenses_categories_name')),
    )
    op.create_table(
        'incomes_categories',
        sa.Column('name', sa.String(length=128), nullable=False),
        sa.Column(
            'id',
            sqlalchemy_utils.types.uuid.UUIDType(binary=False),
            nullable=False,
        ),
        sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
        sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_incomes_categories')),
        sa.UniqueConstraint('name', name=op.f('uq_incomes_categories_name')),
    )
    op.create_table(
        'users',
        sa.Column('first_name', sa.String(length=64), nullable=False),
        sa.Column('last_name', sa.String(length=64), nullable=False),
        sa.Column(
            'email',
            sqlalchemy_utils.types.email.EmailType(length=255),
            nullable=False,
        ),
        sa.Column(
            'password',
            sqlalchemy_utils.types.password.PasswordType(max_length=1024),
            nullable=False,
        ),
        sa.Column(
            'id',
            sqlalchemy_utils.types.uuid.UUIDType(binary=False),
            nullable=False,
        ),
        sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
        sa.UniqueConstraint('email', name=op.f('uq_users_email')),
    )
    op.create_table(
        'expenses',
        sa.Column('name', sa.String(length=128), nullable=False),
        sa.Column(
            'category_id',
            sqlalchemy_utils.types.uuid.UUIDType(binary=False),
            nullable=False,
        ),
        sa.Column('amount', sa.DECIMAL(precision=10, scale=2), nullable=False),
        sa.Column('date', sa.Date(), nullable=False),
        sa.Column(
            'id',
            sqlalchemy_utils.types.uuid.UUIDType(binary=False),
            nullable=False,
        ),
        sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
        sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ['category_id'],
            ['expenses_categories.id'],
            name=op.f('fk_expenses_category_id_expenses_categories'),
        ),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_expenses')),
    )
    op.create_table(
        'incomes',
        sa.Column('name', sa.String(length=128), nullable=False),
        sa.Column('amount', sa.DECIMAL(precision=10, scale=2), nullable=False),
        sa.Column(
            'category_id',
            sqlalchemy_utils.types.uuid.UUIDType(binary=False),
            nullable=False,
        ),
        sa.Column('date', sa.Date(), nullable=False),
        sa.Column(
            'id',
            sqlalchemy_utils.types.uuid.UUIDType(binary=False),
            nullable=False,
        ),
        sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
        sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ['category_id'],
            ['incomes_categories.id'],
            name=op.f('fk_incomes_category_id_incomes_categories'),
        ),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_incomes')),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('incomes')
    op.drop_table('expenses')
    op.drop_table('users')
    op.drop_table('incomes_categories')
    op.drop_table('expenses_categories')
    # ### end Alembic commands ###
